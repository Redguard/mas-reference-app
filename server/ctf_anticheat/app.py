from flask import Flask, request, Blueprint, session
from uuid import uuid4
import base64
import hmac
import hashlib
import logging

logging.basicConfig(level=logging.INFO)
api_v1 = Blueprint("api", __name__, url_prefix = "/8dj21k01sx/api/v1")

# This directory contains the in memory state
# key: token generated by the client
# value: deck of cards generated by the server
in_memory_state = {}

hmac_secret = "61d05dfe-c4da-43cc-befb-af89bea3f2c6"

@api_v1.route("/getCardDeck", methods = ["POST"])
def getCardDeck():
    
    logging.info("getCardDeck called")
    print("bla")

    # Expected body:
    # {
    #   "cardTypes": "...",
    #   "token": "..."
    # }
    data = request.get_json()

    if not data:
        return "ü•∏", 403

    # generate deck

    # Return value:
    # {
    #   payload = {
    #     "deck": "...",
    #     "token": "..."
    #    },
    #   "signature": "..."
    # }

    return "Hello world"


@api_v1.route("/validateDeck", methods = ["POST"])
def validateDeck():

    # Expected body:
    # {
    #   "deck": "...",
    #   "token": "..."
    # }
    data = request.get_json()
    if not data:
        return "ü•∏", 403
    
    # Return value:
    # {
    #   payload = {
    #     "valid": "OK/NOK",
    #     "token": "..."
    #    },
    #   "signature": "..."
    # }

    return "Thank you for the useful feedback!"

app = Flask(__name__)
app.register_blueprint(api_v1)

@app.route('/', defaults={'path': ''}, methods=['GET', 'POST', 'OPTIONS'])
@app.route('/<path:path>', methods=['GET', 'POST', 'OPTIONS'])
def catch_all(path):
    return "üò∂‚Äçüå´Ô∏è", 404

